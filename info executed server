local http_request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request) -- Adaptasi buat Fluxus dan executor lain
local webhookURL = "https://discord.com/api/webhooks/1284396701049946112/B6vo2CkkWxnO7pcm2pa9jPa6dbCft1VEIEiNHtPXf9y6pqNZEt4jrcOXZNDZgCyddnTw"

-- Mendapatkan informasi dari pemain lokal yang mengeksekusi skrip
local player = game:GetService("Players").LocalPlayer
local playerName = player.Name
local placeName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local placeId = game.PlaceId
local maxPlayers = game:GetService("Players").MaxPlayers
local activePlayers = #game:GetService("Players"):GetPlayers()
local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. game.PlaceId .. ", '" .. game.JobId .. "')"

-- Mendapatkan waktu lokal
local localTime = os.date("%X")

-- Membuat konten JSON untuk Discord dengan satu embed
local data = {
    ["embeds"] = {{
        ["title"] = "Pemain Baru!",
        ["description"] = "**Nama Pemain:** " .. playerName .. 
                          "\n\n**Nama Map:** " .. placeName .. 
                          "\n**ID Map:** " .. placeId .. 
                          "\n\n**Info Server:**\nJumlah Pemain Aktif: " .. activePlayers .. "/" .. maxPlayers,
        ["color"] = 5814783,
        ["fields"] = {{
            ["name"] = "Script Join Server",
            ["value"] = "```lua\n" .. joinScript .. "\n```",  -- Dengan backticks untuk kode
            ["inline"] = false
        }, {
            ["name"] = "Salin Script Join Server Untuk HP",
            ["value"] = joinScript,  -- Tanpa backticks, tampil sebagai teks biasa
            ["inline"] = false
        }},
        ["footer"] = {
            ["text"] = "Waktu: " .. localTime -- Hanya satu timestamp di footer
        }
    }}
}

local jsonData = game:GetService("HttpService"):JSONEncode(data)

pcall(function()
    if http_request then
        http_request({
            Url = webhookURL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = jsonData
        })
    else
        game:GetService("HttpService"):PostAsync(
            webhookURL,
            jsonData,
            Enum.HttpContentType.ApplicationJson
        )
    end
end)
