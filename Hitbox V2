local http_request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request)
local webhookURL = "https://discord.com/api/webhooks/1259248213098102867/UqGdOpdNYXF0XS-8pVsAxb9thF7FLwe-9_6z8AfJ46t5ZjOneCTQyNfs5wB9YYShGnDj"

local playerName = game:GetService("Players").LocalPlayer.Name

local data = {
    ["content"] = "",
    ["embeds"] = {{
        ["description"] = playerName .. " Menggunakan Hitbox Reworked",
        ["title"] = "**PLAYER MEMILIH**"
    }}
}

local jsonData = game:GetService("HttpService"):JSONEncode(data)

http_request {
    Url = webhookURL,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = jsonData
}

local HeadSize = 20
local IsTeamCheckEnabled = false

-- Loop hitbox
game:GetService('RunService').RenderStepped:Connect(function()
    local localPlayer = game:GetService('Players').LocalPlayer
    if not localPlayer then return end

    local localPlayerTeam = localPlayer.Team

    for _, player in ipairs(game:GetService('Players'):GetPlayers()) do
        if player ~= localPlayer and (not IsTeamCheckEnabled or player.Team ~= localPlayerTeam) then
            local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                humanoidRootPart.Size = Vector3.new(HeadSize, HeadSize, HeadSize)
                humanoidRootPart.Transparency = 0.7
                humanoidRootPart.BrickColor = BrickColor.new("Really blue")
                humanoidRootPart.Material = Enum.Material.Neon
                humanoidRootPart.CanCollide = false
            end
        end
    end
end)
